/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.Links;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record4<Integer, String, LocalDateTime, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>app.links.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>app.links.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>app.links.link</code>.
     */
    public void setLink(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>app.links.link</code>.
     */
    public String getLink() {
        return (String) get(1);
    }

    /**
     * Setter for <code>app.links.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>app.links.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>app.links.update_info</code>.
     */
    public void setUpdateInfo(JSONB value) {
        set(3, value);
    }

    /**
     * Getter for <code>app.links.update_info</code>.
     */
    public JSONB getUpdateInfo() {
        return (JSONB) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDateTime, JSONB> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDateTime, JSONB> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Links.LINKS.ID;
    }

    @Override
    public Field<String> field2() {
        return Links.LINKS.LINK;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Links.LINKS.UPDATED_AT;
    }

    @Override
    public Field<JSONB> field4() {
        return Links.LINKS.UPDATE_INFO;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLink();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public JSONB component4() {
        return getUpdateInfo();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLink();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public JSONB value4() {
        return getUpdateInfo();
    }

    @Override
    public LinksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public LinksRecord value2(String value) {
        setLink(value);
        return this;
    }

    @Override
    public LinksRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public LinksRecord value4(JSONB value) {
        setUpdateInfo(value);
        return this;
    }

    @Override
    public LinksRecord values(Integer value1, String value2, LocalDateTime value3, JSONB value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(Integer id, String link, LocalDateTime updatedAt, JSONB updateInfo) {
        super(Links.LINKS);

        setId(id);
        setLink(link);
        setUpdatedAt(updatedAt);
        setUpdateInfo(updateInfo);
    }
}
